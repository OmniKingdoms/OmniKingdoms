// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EnterMagic extends ethereum.Event {
  get params(): EnterMagic__Params {
    return new EnterMagic__Params(this);
  }
}

export class EnterMagic__Params {
  _event: EnterMagic;

  constructor(event: EnterMagic) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EnterMain extends ethereum.Event {
  get params(): EnterMain__Params {
    return new EnterMain__Params(this);
  }
}

export class EnterMain__Params {
  _event: EnterMain;

  constructor(event: EnterMain) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EnterSecond extends ethereum.Event {
  get params(): EnterSecond__Params {
    return new EnterSecond__Params(this);
  }
}

export class EnterSecond__Params {
  _event: EnterSecond;

  constructor(event: EnterSecond) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MagicLoss extends ethereum.Event {
  get params(): MagicLoss__Params {
    return new MagicLoss__Params(this);
  }
}

export class MagicLoss__Params {
  _event: MagicLoss;

  constructor(event: MagicLoss) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MagicWin extends ethereum.Event {
  get params(): MagicWin__Params {
    return new MagicWin__Params(this);
  }
}

export class MagicWin__Params {
  _event: MagicWin;

  constructor(event: MagicWin) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MainLoss extends ethereum.Event {
  get params(): MainLoss__Params {
    return new MainLoss__Params(this);
  }
}

export class MainLoss__Params {
  _event: MainLoss;

  constructor(event: MainLoss) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MainWin extends ethereum.Event {
  get params(): MainWin__Params {
    return new MainWin__Params(this);
  }
}

export class MainWin__Params {
  _event: MainWin;

  constructor(event: MainWin) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SecondLoss extends ethereum.Event {
  get params(): SecondLoss__Params {
    return new SecondLoss__Params(this);
  }
}

export class SecondLoss__Params {
  _event: SecondLoss;

  constructor(event: SecondLoss) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SecondWin extends ethereum.Event {
  get params(): SecondWin__Params {
    return new SecondWin__Params(this);
  }
}

export class SecondWin__Params {
  _event: SecondWin;

  constructor(event: SecondWin) {
    this._event = event;
  }

  get _playerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ItemCrafted extends ethereum.Event {
  get params(): ItemCrafted__Params {
    return new ItemCrafted__Params(this);
  }
}

export class ItemCrafted__Params {
  _event: ItemCrafted;

  constructor(event: ItemCrafted) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _player(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DiamondCut extends ethereum.Event {
  get params(): DiamondCut__Params {
    return new DiamondCut__Params(this);
  }
}

export class DiamondCut__Params {
  _event: DiamondCut;

  constructor(event: DiamondCut) {
    this._event = event;
  }

  get _init(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ItemEquiped extends ethereum.Event {
  get params(): ItemEquiped__Params {
    return new ItemEquiped__Params(this);
  }
}

export class ItemEquiped__Params {
  _event: ItemEquiped;

  constructor(event: ItemEquiped) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _playerId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _itemId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ItemUnequiped extends ethereum.Event {
  get params(): ItemUnequiped__Params {
    return new ItemUnequiped__Params(this);
  }
}

export class ItemUnequiped__Params {
  _event: ItemUnequiped;

  constructor(event: ItemUnequiped) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _playerId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _itemId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class List extends ethereum.Event {
  get params(): List__Params {
    return new List__Params(this);
  }
}

export class List__Params {
  _event: List;

  constructor(event: List) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _playerId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Purchase extends ethereum.Event {
  get params(): Purchase__Params {
    return new Purchase__Params(this);
  }
}

export class Purchase__Params {
  _event: Purchase;

  constructor(event: Purchase) {
    this._event = event;
  }

  get _to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Mint extends ethereum.Event {
  get params(): Mint__Params {
    return new Mint__Params(this);
  }
}

export class Mint__Params {
  _event: Mint;

  constructor(event: Mint) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get uri(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class NameChange extends ethereum.Event {
  get params(): NameChange__Params {
    return new NameChange__Params(this);
  }
}

export class NameChange__Params {
  _event: NameChange;

  constructor(event: NameChange) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newName(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class BeginQuesting extends ethereum.Event {
  get params(): BeginQuesting__Params {
    return new BeginQuesting__Params(this);
  }
}

export class BeginQuesting__Params {
  _event: BeginQuesting;

  constructor(event: BeginQuesting) {
    this._event = event;
  }

  get _playerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EndQuesting extends ethereum.Event {
  get params(): EndQuesting__Params {
    return new EndQuesting__Params(this);
  }
}

export class EndQuesting__Params {
  _event: EndQuesting;

  constructor(event: EndQuesting) {
    this._event = event;
  }

  get _playerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BeginTrainingCombat extends ethereum.Event {
  get params(): BeginTrainingCombat__Params {
    return new BeginTrainingCombat__Params(this);
  }
}

export class BeginTrainingCombat__Params {
  _event: BeginTrainingCombat;

  constructor(event: BeginTrainingCombat) {
    this._event = event;
  }

  get _playerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BeginTrainingMana extends ethereum.Event {
  get params(): BeginTrainingMana__Params {
    return new BeginTrainingMana__Params(this);
  }
}

export class BeginTrainingMana__Params {
  _event: BeginTrainingMana;

  constructor(event: BeginTrainingMana) {
    this._event = event;
  }

  get _playerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EndTrainingCombat extends ethereum.Event {
  get params(): EndTrainingCombat__Params {
    return new EndTrainingCombat__Params(this);
  }
}

export class EndTrainingCombat__Params {
  _event: EndTrainingCombat;

  constructor(event: EndTrainingCombat) {
    this._event = event;
  }

  get _playerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EndTrainingMana extends ethereum.Event {
  get params(): EndTrainingMana__Params {
    return new EndTrainingMana__Params(this);
  }
}

export class EndTrainingMana__Params {
  _event: EndTrainingMana;

  constructor(event: EndTrainingMana) {
    this._event = event;
  }

  get _playerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DiamondCut1 extends ethereum.Event {
  get params(): DiamondCut1__Params {
    return new DiamondCut1__Params(this);
  }
}

export class DiamondCut1__Params {
  _event: DiamondCut1;

  constructor(event: DiamondCut1) {
    this._event = event;
  }

  get _init(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class DiamondCut2 extends ethereum.Event {
  get params(): DiamondCut2__Params {
    return new DiamondCut2__Params(this);
  }
}

export class DiamondCut2__Params {
  _event: DiamondCut2;

  constructor(event: DiamondCut2) {
    this._event = event;
  }

  get _init(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class OwnershipTransferred1 extends ethereum.Event {
  get params(): OwnershipTransferred1__Params {
    return new OwnershipTransferred1__Params(this);
  }
}

export class OwnershipTransferred1__Params {
  _event: OwnershipTransferred1;

  constructor(event: OwnershipTransferred1) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DiamondCut3 extends ethereum.Event {
  get params(): DiamondCut3__Params {
    return new DiamondCut3__Params(this);
  }
}

export class DiamondCut3__Params {
  _event: DiamondCut3;

  constructor(event: DiamondCut3) {
    this._event = event;
  }

  get _init(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class OwnershipTransferred2 extends ethereum.Event {
  get params(): OwnershipTransferred2__Params {
    return new OwnershipTransferred2__Params(this);
  }
}

export class OwnershipTransferred2__Params {
  _event: OwnershipTransferred2;

  constructor(event: OwnershipTransferred2) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Sk__getMagicArenaResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class Sk__getMainArenaResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class Sk__getSecondArenaResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class Sk__getItemResultItemStruct extends ethereum.Tuple {
  get slot(): BigInt {
    return this[0].toBigInt();
  }

  get rank(): BigInt {
    return this[1].toBigInt();
  }

  get value(): BigInt {
    return this[2].toBigInt();
  }

  get stat(): BigInt {
    return this[3].toBigInt();
  }

  get name(): string {
    return this[4].toString();
  }

  get owner(): Address {
    return this[5].toAddress();
  }

  get isEquiped(): boolean {
    return this[6].toBoolean();
  }
}

export class Sk__getPlayerResultPlayerStruct extends ethereum.Tuple {
  get level(): BigInt {
    return this[0].toBigInt();
  }

  get xp(): BigInt {
    return this[1].toBigInt();
  }

  get status(): BigInt {
    return this[2].toBigInt();
  }

  get strength(): BigInt {
    return this[3].toBigInt();
  }

  get health(): BigInt {
    return this[4].toBigInt();
  }

  get magic(): BigInt {
    return this[5].toBigInt();
  }

  get mana(): BigInt {
    return this[6].toBigInt();
  }

  get agility(): BigInt {
    return this[7].toBigInt();
  }

  get luck(): BigInt {
    return this[8].toBigInt();
  }

  get wisdom(): BigInt {
    return this[9].toBigInt();
  }

  get haki(): BigInt {
    return this[10].toBigInt();
  }

  get perception(): BigInt {
    return this[11].toBigInt();
  }

  get defense(): BigInt {
    return this[12].toBigInt();
  }

  get name(): string {
    return this[13].toString();
  }

  get uri(): string {
    return this[14].toString();
  }

  get male(): boolean {
    return this[15].toBoolean();
  }

  get slot(): Sk__getPlayerResultPlayerSlotStruct {
    return changetype<Sk__getPlayerResultPlayerSlotStruct>(this[16].toTuple());
  }
}

export class Sk__getPlayerResultPlayerSlotStruct extends ethereum.Tuple {
  get head(): BigInt {
    return this[0].toBigInt();
  }

  get body(): BigInt {
    return this[1].toBigInt();
  }

  get leftHand(): BigInt {
    return this[2].toBigInt();
  }

  get rightHand(): BigInt {
    return this[3].toBigInt();
  }

  get pants(): BigInt {
    return this[4].toBigInt();
  }

  get feet(): BigInt {
    return this[5].toBigInt();
  }
}

export class Sk extends ethereum.SmartContract {
  static bind(address: Address): Sk {
    return new Sk("Sk", address);
  }

  getMagicArena(): Sk__getMagicArenaResult {
    let result = super.call(
      "getMagicArena",
      "getMagicArena():(bool,uint256)",
      []
    );

    return new Sk__getMagicArenaResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_getMagicArena(): ethereum.CallResult<Sk__getMagicArenaResult> {
    let result = super.tryCall(
      "getMagicArena",
      "getMagicArena():(bool,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Sk__getMagicArenaResult(value[0].toBoolean(), value[1].toBigInt())
    );
  }

  getMagicArenaLosses(_playerId: BigInt): BigInt {
    let result = super.call(
      "getMagicArenaLosses",
      "getMagicArenaLosses(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );

    return result[0].toBigInt();
  }

  try_getMagicArenaLosses(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMagicArenaLosses",
      "getMagicArenaLosses(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMagicArenaWins(_playerId: BigInt): BigInt {
    let result = super.call(
      "getMagicArenaWins",
      "getMagicArenaWins(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );

    return result[0].toBigInt();
  }

  try_getMagicArenaWins(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMagicArenaWins",
      "getMagicArenaWins(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMainArena(): Sk__getMainArenaResult {
    let result = super.call(
      "getMainArena",
      "getMainArena():(bool,uint256)",
      []
    );

    return new Sk__getMainArenaResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_getMainArena(): ethereum.CallResult<Sk__getMainArenaResult> {
    let result = super.tryCall(
      "getMainArena",
      "getMainArena():(bool,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Sk__getMainArenaResult(value[0].toBoolean(), value[1].toBigInt())
    );
  }

  getMainArenaLosses(_playerId: BigInt): BigInt {
    let result = super.call(
      "getMainArenaLosses",
      "getMainArenaLosses(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );

    return result[0].toBigInt();
  }

  try_getMainArenaLosses(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMainArenaLosses",
      "getMainArenaLosses(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMainArenaWins(_playerId: BigInt): BigInt {
    let result = super.call(
      "getMainArenaWins",
      "getMainArenaWins(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );

    return result[0].toBigInt();
  }

  try_getMainArenaWins(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMainArenaWins",
      "getMainArenaWins(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSecondArena(): Sk__getSecondArenaResult {
    let result = super.call(
      "getSecondArena",
      "getSecondArena():(bool,uint256)",
      []
    );

    return new Sk__getSecondArenaResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_getSecondArena(): ethereum.CallResult<Sk__getSecondArenaResult> {
    let result = super.tryCall(
      "getSecondArena",
      "getSecondArena():(bool,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Sk__getSecondArenaResult(value[0].toBoolean(), value[1].toBigInt())
    );
  }

  getTotalLosses(_playerId: BigInt): BigInt {
    let result = super.call(
      "getTotalLosses",
      "getTotalLosses(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );

    return result[0].toBigInt();
  }

  try_getTotalLosses(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalLosses",
      "getTotalLosses(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTotalWins(_playerId: BigInt): BigInt {
    let result = super.call("getTotalWins", "getTotalWins(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_playerId)
    ]);

    return result[0].toBigInt();
  }

  try_getTotalWins(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalWins",
      "getTotalWins(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getItem(_itemId: BigInt): Sk__getItemResultItemStruct {
    let result = super.call(
      "getItem",
      "getItem(uint256):((uint256,uint256,uint256,uint256,string,address,bool))",
      [ethereum.Value.fromUnsignedBigInt(_itemId)]
    );

    return changetype<Sk__getItemResultItemStruct>(result[0].toTuple());
  }

  try_getItem(
    _itemId: BigInt
  ): ethereum.CallResult<Sk__getItemResultItemStruct> {
    let result = super.tryCall(
      "getItem",
      "getItem(uint256):((uint256,uint256,uint256,uint256,string,address,bool))",
      [ethereum.Value.fromUnsignedBigInt(_itemId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sk__getItemResultItemStruct>(value[0].toTuple())
    );
  }

  getItemCount(): BigInt {
    let result = super.call("getItemCount", "getItemCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getItemCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getItemCount", "getItemCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getItems(_address: Address): Array<BigInt> {
    let result = super.call("getItems", "getItems(address):(uint256[])", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBigIntArray();
  }

  try_getItems(_address: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("getItems", "getItems(address):(uint256[])", [
      ethereum.Value.fromAddress(_address)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  facetAddress(_functionSelector: Bytes): Address {
    let result = super.call("facetAddress", "facetAddress(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(_functionSelector)
    ]);

    return result[0].toAddress();
  }

  try_facetAddress(_functionSelector: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "facetAddress",
      "facetAddress(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(_functionSelector)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  facetAddresses(): Array<Address> {
    let result = super.call(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_facetAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  facetFunctionSelectors(_facet: Address): Array<Bytes> {
    let result = super.call(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );

    return result[0].toBytesArray();
  }

  try_facetFunctionSelectors(
    _facet: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBlocktime(): BigInt {
    let result = super.call("getBlocktime", "getBlocktime():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBlocktime(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getBlocktime", "getBlocktime():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPlayer(_playerId: BigInt): Sk__getPlayerResultPlayerStruct {
    let result = super.call(
      "getPlayer",
      "getPlayer(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,string,bool,(uint256,uint256,uint256,uint256,uint256,uint256)))",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );

    return changetype<Sk__getPlayerResultPlayerStruct>(result[0].toTuple());
  }

  try_getPlayer(
    _playerId: BigInt
  ): ethereum.CallResult<Sk__getPlayerResultPlayerStruct> {
    let result = super.tryCall(
      "getPlayer",
      "getPlayer(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,string,bool,(uint256,uint256,uint256,uint256,uint256,uint256)))",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sk__getPlayerResultPlayerStruct>(value[0].toTuple())
    );
  }

  getPlayers(_address: Address): Array<BigInt> {
    let result = super.call("getPlayers", "getPlayers(address):(uint256[])", [
      ethereum.Value.fromAddress(_address)
    ]);

    return result[0].toBigIntArray();
  }

  try_getPlayers(_address: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getPlayers",
      "getPlayers(address):(uint256[])",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  nameAvailable(_name: string): boolean {
    let result = super.call("nameAvailable", "nameAvailable(string):(bool)", [
      ethereum.Value.fromString(_name)
    ]);

    return result[0].toBoolean();
  }

  try_nameAvailable(_name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "nameAvailable",
      "nameAvailable(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ownerOf(_id: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(_id: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  playerCount(): BigInt {
    let result = super.call("playerCount", "playerCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_playerCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("playerCount", "playerCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCooldown(_playerId: BigInt): BigInt {
    let result = super.call("getCooldown", "getCooldown(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_playerId)
    ]);

    return result[0].toBigInt();
  }

  try_getCooldown(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCooldown",
      "getCooldown(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGemBalance(_address: Address): BigInt {
    let result = super.call(
      "getGemBalance",
      "getGemBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBigInt();
  }

  try_getGemBalance(_address: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGemBalance",
      "getGemBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGemStart(_playerId: BigInt): BigInt {
    let result = super.call("getGemStart", "getGemStart(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_playerId)
    ]);

    return result[0].toBigInt();
  }

  try_getGemStart(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGemStart",
      "getGemStart(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGoldBalance(_address: Address): BigInt {
    let result = super.call(
      "getGoldBalance",
      "getGoldBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBigInt();
  }

  try_getGoldBalance(_address: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGoldBalance",
      "getGoldBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGoldStart(_playerId: BigInt): BigInt {
    let result = super.call("getGoldStart", "getGoldStart(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_playerId)
    ]);

    return result[0].toBigInt();
  }

  try_getGoldStart(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGoldStart",
      "getGoldStart(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCombatStart(_playerId: BigInt): BigInt {
    let result = super.call(
      "getCombatStart",
      "getCombatStart(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );

    return result[0].toBigInt();
  }

  try_getCombatStart(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCombatStart",
      "getCombatStart(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getManaStart(_playerId: BigInt): BigInt {
    let result = super.call("getManaStart", "getManaStart(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_playerId)
    ]);

    return result[0].toBigInt();
  }

  try_getManaStart(_playerId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getManaStart",
      "getManaStart(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_playerId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  facetAddress1(_functionSelector: Bytes): Address {
    let result = super.call("facetAddress", "facetAddress(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(_functionSelector)
    ]);

    return result[0].toAddress();
  }

  try_facetAddress1(_functionSelector: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "facetAddress",
      "facetAddress(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(_functionSelector)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  facetAddresses1(): Array<Address> {
    let result = super.call(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_facetAddresses1(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  facetFunctionSelectors1(_facet: Address): Array<Bytes> {
    let result = super.call(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );

    return result[0].toBytesArray();
  }

  try_facetFunctionSelectors1(
    _facet: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  supportsInterface1(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface1(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner1(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner1(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class EnterMagicArenaCall extends ethereum.Call {
  get inputs(): EnterMagicArenaCall__Inputs {
    return new EnterMagicArenaCall__Inputs(this);
  }

  get outputs(): EnterMagicArenaCall__Outputs {
    return new EnterMagicArenaCall__Outputs(this);
  }
}

export class EnterMagicArenaCall__Inputs {
  _call: EnterMagicArenaCall;

  constructor(call: EnterMagicArenaCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EnterMagicArenaCall__Outputs {
  _call: EnterMagicArenaCall;

  constructor(call: EnterMagicArenaCall) {
    this._call = call;
  }
}

export class EnterMainArenaCall extends ethereum.Call {
  get inputs(): EnterMainArenaCall__Inputs {
    return new EnterMainArenaCall__Inputs(this);
  }

  get outputs(): EnterMainArenaCall__Outputs {
    return new EnterMainArenaCall__Outputs(this);
  }
}

export class EnterMainArenaCall__Inputs {
  _call: EnterMainArenaCall;

  constructor(call: EnterMainArenaCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EnterMainArenaCall__Outputs {
  _call: EnterMainArenaCall;

  constructor(call: EnterMainArenaCall) {
    this._call = call;
  }
}

export class EnterSecondArenaCall extends ethereum.Call {
  get inputs(): EnterSecondArenaCall__Inputs {
    return new EnterSecondArenaCall__Inputs(this);
  }

  get outputs(): EnterSecondArenaCall__Outputs {
    return new EnterSecondArenaCall__Outputs(this);
  }
}

export class EnterSecondArenaCall__Inputs {
  _call: EnterSecondArenaCall;

  constructor(call: EnterSecondArenaCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EnterSecondArenaCall__Outputs {
  _call: EnterSecondArenaCall;

  constructor(call: EnterSecondArenaCall) {
    this._call = call;
  }
}

export class FightMagicArenaCall extends ethereum.Call {
  get inputs(): FightMagicArenaCall__Inputs {
    return new FightMagicArenaCall__Inputs(this);
  }

  get outputs(): FightMagicArenaCall__Outputs {
    return new FightMagicArenaCall__Outputs(this);
  }
}

export class FightMagicArenaCall__Inputs {
  _call: FightMagicArenaCall;

  constructor(call: FightMagicArenaCall) {
    this._call = call;
  }

  get _challengerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FightMagicArenaCall__Outputs {
  _call: FightMagicArenaCall;

  constructor(call: FightMagicArenaCall) {
    this._call = call;
  }
}

export class FightMainArenaCall extends ethereum.Call {
  get inputs(): FightMainArenaCall__Inputs {
    return new FightMainArenaCall__Inputs(this);
  }

  get outputs(): FightMainArenaCall__Outputs {
    return new FightMainArenaCall__Outputs(this);
  }
}

export class FightMainArenaCall__Inputs {
  _call: FightMainArenaCall;

  constructor(call: FightMainArenaCall) {
    this._call = call;
  }

  get _challengerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FightMainArenaCall__Outputs {
  _call: FightMainArenaCall;

  constructor(call: FightMainArenaCall) {
    this._call = call;
  }
}

export class FightSecondArenaCall extends ethereum.Call {
  get inputs(): FightSecondArenaCall__Inputs {
    return new FightSecondArenaCall__Inputs(this);
  }

  get outputs(): FightSecondArenaCall__Outputs {
    return new FightSecondArenaCall__Outputs(this);
  }
}

export class FightSecondArenaCall__Inputs {
  _call: FightSecondArenaCall;

  constructor(call: FightSecondArenaCall) {
    this._call = call;
  }

  get _challengerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FightSecondArenaCall__Outputs {
  _call: FightSecondArenaCall;

  constructor(call: FightSecondArenaCall) {
    this._call = call;
  }
}

export class LeaveMainArenaCall extends ethereum.Call {
  get inputs(): LeaveMainArenaCall__Inputs {
    return new LeaveMainArenaCall__Inputs(this);
  }

  get outputs(): LeaveMainArenaCall__Outputs {
    return new LeaveMainArenaCall__Outputs(this);
  }
}

export class LeaveMainArenaCall__Inputs {
  _call: LeaveMainArenaCall;

  constructor(call: LeaveMainArenaCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LeaveMainArenaCall__Outputs {
  _call: LeaveMainArenaCall;

  constructor(call: LeaveMainArenaCall) {
    this._call = call;
  }
}

export class OpenArenasCall extends ethereum.Call {
  get inputs(): OpenArenasCall__Inputs {
    return new OpenArenasCall__Inputs(this);
  }

  get outputs(): OpenArenasCall__Outputs {
    return new OpenArenasCall__Outputs(this);
  }
}

export class OpenArenasCall__Inputs {
  _call: OpenArenasCall;

  constructor(call: OpenArenasCall) {
    this._call = call;
  }
}

export class OpenArenasCall__Outputs {
  _call: OpenArenasCall;

  constructor(call: OpenArenasCall) {
    this._call = call;
  }
}

export class CraftArmorCall extends ethereum.Call {
  get inputs(): CraftArmorCall__Inputs {
    return new CraftArmorCall__Inputs(this);
  }

  get outputs(): CraftArmorCall__Outputs {
    return new CraftArmorCall__Outputs(this);
  }
}

export class CraftArmorCall__Inputs {
  _call: CraftArmorCall;

  constructor(call: CraftArmorCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CraftArmorCall__Outputs {
  _call: CraftArmorCall;

  constructor(call: CraftArmorCall) {
    this._call = call;
  }
}

export class CraftGuitarCall extends ethereum.Call {
  get inputs(): CraftGuitarCall__Inputs {
    return new CraftGuitarCall__Inputs(this);
  }

  get outputs(): CraftGuitarCall__Outputs {
    return new CraftGuitarCall__Outputs(this);
  }
}

export class CraftGuitarCall__Inputs {
  _call: CraftGuitarCall;

  constructor(call: CraftGuitarCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CraftGuitarCall__Outputs {
  _call: CraftGuitarCall;

  constructor(call: CraftGuitarCall) {
    this._call = call;
  }
}

export class CraftHelmetCall extends ethereum.Call {
  get inputs(): CraftHelmetCall__Inputs {
    return new CraftHelmetCall__Inputs(this);
  }

  get outputs(): CraftHelmetCall__Outputs {
    return new CraftHelmetCall__Outputs(this);
  }
}

export class CraftHelmetCall__Inputs {
  _call: CraftHelmetCall;

  constructor(call: CraftHelmetCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CraftHelmetCall__Outputs {
  _call: CraftHelmetCall;

  constructor(call: CraftHelmetCall) {
    this._call = call;
  }
}

export class CraftSorcerShoesCall extends ethereum.Call {
  get inputs(): CraftSorcerShoesCall__Inputs {
    return new CraftSorcerShoesCall__Inputs(this);
  }

  get outputs(): CraftSorcerShoesCall__Outputs {
    return new CraftSorcerShoesCall__Outputs(this);
  }
}

export class CraftSorcerShoesCall__Inputs {
  _call: CraftSorcerShoesCall;

  constructor(call: CraftSorcerShoesCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CraftSorcerShoesCall__Outputs {
  _call: CraftSorcerShoesCall;

  constructor(call: CraftSorcerShoesCall) {
    this._call = call;
  }
}

export class CraftSwordCall extends ethereum.Call {
  get inputs(): CraftSwordCall__Inputs {
    return new CraftSwordCall__Inputs(this);
  }

  get outputs(): CraftSwordCall__Outputs {
    return new CraftSwordCall__Outputs(this);
  }
}

export class CraftSwordCall__Inputs {
  _call: CraftSwordCall;

  constructor(call: CraftSwordCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CraftSwordCall__Outputs {
  _call: CraftSwordCall;

  constructor(call: CraftSwordCall) {
    this._call = call;
  }
}

export class CraftWizardHatCall extends ethereum.Call {
  get inputs(): CraftWizardHatCall__Inputs {
    return new CraftWizardHatCall__Inputs(this);
  }

  get outputs(): CraftWizardHatCall__Outputs {
    return new CraftWizardHatCall__Outputs(this);
  }
}

export class CraftWizardHatCall__Inputs {
  _call: CraftWizardHatCall;

  constructor(call: CraftWizardHatCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CraftWizardHatCall__Outputs {
  _call: CraftWizardHatCall;

  constructor(call: CraftWizardHatCall) {
    this._call = call;
  }
}

export class DiamondCutCall extends ethereum.Call {
  get inputs(): DiamondCutCall__Inputs {
    return new DiamondCutCall__Inputs(this);
  }

  get outputs(): DiamondCutCall__Outputs {
    return new DiamondCutCall__Outputs(this);
  }
}

export class DiamondCutCall__Inputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }

  get _init(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class DiamondCutCall__Outputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }
}

export class EquipBodyCall extends ethereum.Call {
  get inputs(): EquipBodyCall__Inputs {
    return new EquipBodyCall__Inputs(this);
  }

  get outputs(): EquipBodyCall__Outputs {
    return new EquipBodyCall__Outputs(this);
  }
}

export class EquipBodyCall__Inputs {
  _call: EquipBodyCall;

  constructor(call: EquipBodyCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _itemId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EquipBodyCall__Outputs {
  _call: EquipBodyCall;

  constructor(call: EquipBodyCall) {
    this._call = call;
  }
}

export class EquipHeadCall extends ethereum.Call {
  get inputs(): EquipHeadCall__Inputs {
    return new EquipHeadCall__Inputs(this);
  }

  get outputs(): EquipHeadCall__Outputs {
    return new EquipHeadCall__Outputs(this);
  }
}

export class EquipHeadCall__Inputs {
  _call: EquipHeadCall;

  constructor(call: EquipHeadCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _itemId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EquipHeadCall__Outputs {
  _call: EquipHeadCall;

  constructor(call: EquipHeadCall) {
    this._call = call;
  }
}

export class EquipRightHandCall extends ethereum.Call {
  get inputs(): EquipRightHandCall__Inputs {
    return new EquipRightHandCall__Inputs(this);
  }

  get outputs(): EquipRightHandCall__Outputs {
    return new EquipRightHandCall__Outputs(this);
  }
}

export class EquipRightHandCall__Inputs {
  _call: EquipRightHandCall;

  constructor(call: EquipRightHandCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _itemId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EquipRightHandCall__Outputs {
  _call: EquipRightHandCall;

  constructor(call: EquipRightHandCall) {
    this._call = call;
  }
}

export class UnequipBodyCall extends ethereum.Call {
  get inputs(): UnequipBodyCall__Inputs {
    return new UnequipBodyCall__Inputs(this);
  }

  get outputs(): UnequipBodyCall__Outputs {
    return new UnequipBodyCall__Outputs(this);
  }
}

export class UnequipBodyCall__Inputs {
  _call: UnequipBodyCall;

  constructor(call: UnequipBodyCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _itemId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnequipBodyCall__Outputs {
  _call: UnequipBodyCall;

  constructor(call: UnequipBodyCall) {
    this._call = call;
  }
}

export class UnequipHeadCall extends ethereum.Call {
  get inputs(): UnequipHeadCall__Inputs {
    return new UnequipHeadCall__Inputs(this);
  }

  get outputs(): UnequipHeadCall__Outputs {
    return new UnequipHeadCall__Outputs(this);
  }
}

export class UnequipHeadCall__Inputs {
  _call: UnequipHeadCall;

  constructor(call: UnequipHeadCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _itemId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnequipHeadCall__Outputs {
  _call: UnequipHeadCall;

  constructor(call: UnequipHeadCall) {
    this._call = call;
  }
}

export class UnequipRightHandCall extends ethereum.Call {
  get inputs(): UnequipRightHandCall__Inputs {
    return new UnequipRightHandCall__Inputs(this);
  }

  get outputs(): UnequipRightHandCall__Outputs {
    return new UnequipRightHandCall__Outputs(this);
  }
}

export class UnequipRightHandCall__Inputs {
  _call: UnequipRightHandCall;

  constructor(call: UnequipRightHandCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _itemId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnequipRightHandCall__Outputs {
  _call: UnequipRightHandCall;

  constructor(call: UnequipRightHandCall) {
    this._call = call;
  }
}

export class CrateListingCall extends ethereum.Call {
  get inputs(): CrateListingCall__Inputs {
    return new CrateListingCall__Inputs(this);
  }

  get outputs(): CrateListingCall__Outputs {
    return new CrateListingCall__Outputs(this);
  }
}

export class CrateListingCall__Inputs {
  _call: CrateListingCall;

  constructor(call: CrateListingCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CrateListingCall__Outputs {
  _call: CrateListingCall;

  constructor(call: CrateListingCall) {
    this._call = call;
  }
}

export class PurchasePlayerCall extends ethereum.Call {
  get inputs(): PurchasePlayerCall__Inputs {
    return new PurchasePlayerCall__Inputs(this);
  }

  get outputs(): PurchasePlayerCall__Outputs {
    return new PurchasePlayerCall__Outputs(this);
  }
}

export class PurchasePlayerCall__Inputs {
  _call: PurchasePlayerCall;

  constructor(call: PurchasePlayerCall) {
    this._call = call;
  }

  get _listingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PurchasePlayerCall__Outputs {
  _call: PurchasePlayerCall;

  constructor(call: PurchasePlayerCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class ChangeNameCall extends ethereum.Call {
  get inputs(): ChangeNameCall__Inputs {
    return new ChangeNameCall__Inputs(this);
  }

  get outputs(): ChangeNameCall__Outputs {
    return new ChangeNameCall__Outputs(this);
  }
}

export class ChangeNameCall__Inputs {
  _call: ChangeNameCall;

  constructor(call: ChangeNameCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChangeNameCall__Outputs {
  _call: ChangeNameCall;

  constructor(call: ChangeNameCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _uri(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _isMale(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class EndQuestGemCall extends ethereum.Call {
  get inputs(): EndQuestGemCall__Inputs {
    return new EndQuestGemCall__Inputs(this);
  }

  get outputs(): EndQuestGemCall__Outputs {
    return new EndQuestGemCall__Outputs(this);
  }
}

export class EndQuestGemCall__Inputs {
  _call: EndQuestGemCall;

  constructor(call: EndQuestGemCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndQuestGemCall__Outputs {
  _call: EndQuestGemCall;

  constructor(call: EndQuestGemCall) {
    this._call = call;
  }
}

export class EndQuestGoldCall extends ethereum.Call {
  get inputs(): EndQuestGoldCall__Inputs {
    return new EndQuestGoldCall__Inputs(this);
  }

  get outputs(): EndQuestGoldCall__Outputs {
    return new EndQuestGoldCall__Outputs(this);
  }
}

export class EndQuestGoldCall__Inputs {
  _call: EndQuestGoldCall;

  constructor(call: EndQuestGoldCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndQuestGoldCall__Outputs {
  _call: EndQuestGoldCall;

  constructor(call: EndQuestGoldCall) {
    this._call = call;
  }
}

export class StartQuestGemCall extends ethereum.Call {
  get inputs(): StartQuestGemCall__Inputs {
    return new StartQuestGemCall__Inputs(this);
  }

  get outputs(): StartQuestGemCall__Outputs {
    return new StartQuestGemCall__Outputs(this);
  }
}

export class StartQuestGemCall__Inputs {
  _call: StartQuestGemCall;

  constructor(call: StartQuestGemCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartQuestGemCall__Outputs {
  _call: StartQuestGemCall;

  constructor(call: StartQuestGemCall) {
    this._call = call;
  }
}

export class StartQuestGoldCall extends ethereum.Call {
  get inputs(): StartQuestGoldCall__Inputs {
    return new StartQuestGoldCall__Inputs(this);
  }

  get outputs(): StartQuestGoldCall__Outputs {
    return new StartQuestGoldCall__Outputs(this);
  }
}

export class StartQuestGoldCall__Inputs {
  _call: StartQuestGoldCall;

  constructor(call: StartQuestGoldCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartQuestGoldCall__Outputs {
  _call: StartQuestGoldCall;

  constructor(call: StartQuestGoldCall) {
    this._call = call;
  }
}

export class ActiveScriptCall extends ethereum.Call {
  get inputs(): ActiveScriptCall__Inputs {
    return new ActiveScriptCall__Inputs(this);
  }

  get outputs(): ActiveScriptCall__Outputs {
    return new ActiveScriptCall__Outputs(this);
  }
}

export class ActiveScriptCall__Inputs {
  _call: ActiveScriptCall;

  constructor(call: ActiveScriptCall) {
    this._call = call;
  }

  get _playerId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ActiveScriptCall__Outputs {
  _call: ActiveScriptCall;

  constructor(call: ActiveScriptCall) {
    this._call = call;
  }
}

export class EndTrainingCombatCall extends ethereum.Call {
  get inputs(): EndTrainingCombatCall__Inputs {
    return new EndTrainingCombatCall__Inputs(this);
  }

  get outputs(): EndTrainingCombatCall__Outputs {
    return new EndTrainingCombatCall__Outputs(this);
  }
}

export class EndTrainingCombatCall__Inputs {
  _call: EndTrainingCombatCall;

  constructor(call: EndTrainingCombatCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndTrainingCombatCall__Outputs {
  _call: EndTrainingCombatCall;

  constructor(call: EndTrainingCombatCall) {
    this._call = call;
  }
}

export class EndTrainingManaCall extends ethereum.Call {
  get inputs(): EndTrainingManaCall__Inputs {
    return new EndTrainingManaCall__Inputs(this);
  }

  get outputs(): EndTrainingManaCall__Outputs {
    return new EndTrainingManaCall__Outputs(this);
  }
}

export class EndTrainingManaCall__Inputs {
  _call: EndTrainingManaCall;

  constructor(call: EndTrainingManaCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndTrainingManaCall__Outputs {
  _call: EndTrainingManaCall;

  constructor(call: EndTrainingManaCall) {
    this._call = call;
  }
}

export class StartTrainingCombatCall extends ethereum.Call {
  get inputs(): StartTrainingCombatCall__Inputs {
    return new StartTrainingCombatCall__Inputs(this);
  }

  get outputs(): StartTrainingCombatCall__Outputs {
    return new StartTrainingCombatCall__Outputs(this);
  }
}

export class StartTrainingCombatCall__Inputs {
  _call: StartTrainingCombatCall;

  constructor(call: StartTrainingCombatCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartTrainingCombatCall__Outputs {
  _call: StartTrainingCombatCall;

  constructor(call: StartTrainingCombatCall) {
    this._call = call;
  }
}

export class StartTrainingManaCall extends ethereum.Call {
  get inputs(): StartTrainingManaCall__Inputs {
    return new StartTrainingManaCall__Inputs(this);
  }

  get outputs(): StartTrainingManaCall__Outputs {
    return new StartTrainingManaCall__Outputs(this);
  }
}

export class StartTrainingManaCall__Inputs {
  _call: StartTrainingManaCall;

  constructor(call: StartTrainingManaCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StartTrainingManaCall__Outputs {
  _call: StartTrainingManaCall;

  constructor(call: StartTrainingManaCall) {
    this._call = call;
  }
}

export class DiamondCut1Call extends ethereum.Call {
  get inputs(): DiamondCut1Call__Inputs {
    return new DiamondCut1Call__Inputs(this);
  }

  get outputs(): DiamondCut1Call__Outputs {
    return new DiamondCut1Call__Outputs(this);
  }
}

export class DiamondCut1Call__Inputs {
  _call: DiamondCut1Call;

  constructor(call: DiamondCut1Call) {
    this._call = call;
  }

  get _init(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class DiamondCut1Call__Outputs {
  _call: DiamondCut1Call;

  constructor(call: DiamondCut1Call) {
    this._call = call;
  }
}

export class TransferOwnership1Call extends ethereum.Call {
  get inputs(): TransferOwnership1Call__Inputs {
    return new TransferOwnership1Call__Inputs(this);
  }

  get outputs(): TransferOwnership1Call__Outputs {
    return new TransferOwnership1Call__Outputs(this);
  }
}

export class TransferOwnership1Call__Inputs {
  _call: TransferOwnership1Call;

  constructor(call: TransferOwnership1Call) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnership1Call__Outputs {
  _call: TransferOwnership1Call;

  constructor(call: TransferOwnership1Call) {
    this._call = call;
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}
